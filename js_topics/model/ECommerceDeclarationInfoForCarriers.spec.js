/*
 * Carriers V2
 * Documentation for Carriers web apis
 *
 * OpenAPI spec version: Carriers V2
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.33
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CarriersV2);
  }
}(this, function(expect, CarriersV2) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('ECommerceDeclarationInfoForCarriers', function() {
      beforeEach(function() {
        instance = new CarriersV2.ECommerceDeclarationInfoForCarriers();
      });

      it('should create an instance of ECommerceDeclarationInfoForCarriers', function() {
        // TODO: update the code to test ECommerceDeclarationInfoForCarriers
        expect(instance).to.be.a(CarriersV2.ECommerceDeclarationInfoForCarriers);
      });

      it('should have the property id (base name: "id")', function() {
        // TODO: update the code to test the property id
        expect(instance).to.have.property('id');
        // expect(instance.id).to.be(expectedValueLiteral);
      });

      it('should have the property regNumber (base name: "regNumber")', function() {
        // TODO: update the code to test the property regNumber
        expect(instance).to.have.property('regNumber');
        // expect(instance.regNumber).to.be(expectedValueLiteral);
      });

      it('should have the property trackingNumber (base name: "trackingNumber")', function() {
        // TODO: update the code to test the property trackingNumber
        expect(instance).to.have.property('trackingNumber');
        // expect(instance.trackingNumber).to.be(expectedValueLiteral);
      });

      it('should have the property payStatusId (base name: "payStatus_Id")', function() {
        // TODO: update the code to test the property payStatusId
        expect(instance).to.have.property('payStatusId');
        // expect(instance.payStatusId).to.be(expectedValueLiteral);
      });

      it('should have the property payStatus (base name: "payStatus")', function() {
        // TODO: update the code to test the property payStatus
        expect(instance).to.have.property('payStatus');
        // expect(instance.payStatus).to.be(expectedValueLiteral);
      });

      it('should have the property receiveStatus (base name: "receiveStatus")', function() {
        // TODO: update the code to test the property receiveStatus
        expect(instance).to.have.property('receiveStatus');
        // expect(instance.receiveStatus).to.be(expectedValueLiteral);
      });

      it('should have the property approveStatus (base name: "approveStatus")', function() {
        // TODO: update the code to test the property approveStatus
        expect(instance).to.have.property('approveStatus');
        // expect(instance.approveStatus).to.be(expectedValueLiteral);
      });

      it('should have the property pinNumber (base name: "pinNumber")', function() {
        // TODO: update the code to test the property pinNumber
        expect(instance).to.have.property('pinNumber');
        // expect(instance.pinNumber).to.be(expectedValueLiteral);
      });

      it('should have the property importName (base name: "importName")', function() {
        // TODO: update the code to test the property importName
        expect(instance).to.have.property('importName');
        // expect(instance.importName).to.be(expectedValueLiteral);
      });

      it('should have the property phone (base name: "phone")', function() {
        // TODO: update the code to test the property phone
        expect(instance).to.have.property('phone');
        // expect(instance.phone).to.be(expectedValueLiteral);
      });

      it('should have the property exportName (base name: "exportName")', function() {
        // TODO: update the code to test the property exportName
        expect(instance).to.have.property('exportName');
        // expect(instance.exportName).to.be(expectedValueLiteral);
      });

      it('should have the property fromCountry (base name: "fromCountry")', function() {
        // TODO: update the code to test the property fromCountry
        expect(instance).to.have.property('fromCountry');
        // expect(instance.fromCountry).to.be(expectedValueLiteral);
      });

      it('should have the property carrierVoen (base name: "carrierVoen")', function() {
        // TODO: update the code to test the property carrierVoen
        expect(instance).to.have.property('carrierVoen');
        // expect(instance.carrierVoen).to.be(expectedValueLiteral);
      });

      it('should have the property insertDate (base name: "insertDate")', function() {
        // TODO: update the code to test the property insertDate
        expect(instance).to.have.property('insertDate');
        // expect(instance.insertDate).to.be(expectedValueLiteral);
      });

      it('should have the property isUpdated (base name: "isUpdated")', function() {
        // TODO: update the code to test the property isUpdated
        expect(instance).to.have.property('isUpdated');
        // expect(instance.isUpdated).to.be(expectedValueLiteral);
      });

      it('should have the property goodsList (base name: "goodsList")', function() {
        // TODO: update the code to test the property goodsList
        expect(instance).to.have.property('goodsList');
        // expect(instance.goodsList).to.be(expectedValueLiteral);
      });

    });
  });

}));
