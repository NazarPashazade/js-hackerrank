/*
 * Carriers V2
 * Documentation for Carriers web apis
 *
 * OpenAPI spec version: Carriers V2
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.33
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CarriersV2);
  }
}(this, function(expect, CarriersV2) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('ECommerceGoods', function() {
      beforeEach(function() {
        instance = new CarriersV2.ECommerceGoods();
      });

      it('should create an instance of ECommerceGoods', function() {
        // TODO: update the code to test ECommerceGoods
        expect(instance).to.be.a(CarriersV2.ECommerceGoods);
      });

      it('should have the property goodsId (base name: "goodsId")', function() {
        // TODO: update the code to test the property goodsId
        expect(instance).to.have.property('goodsId');
        // expect(instance.goodsId).to.be(expectedValueLiteral);
      });

      it('should have the property invoicePrice (base name: "invoicePrice")', function() {
        // TODO: update the code to test the property invoicePrice
        expect(instance).to.have.property('invoicePrice');
        // expect(instance.invoicePrice).to.be(expectedValueLiteral);
      });

      it('should have the property currencyType (base name: "currencyType")', function() {
        // TODO: update the code to test the property currencyType
        expect(instance).to.have.property('currencyType');
        // expect(instance.currencyType).to.be(expectedValueLiteral);
      });

      it('should have the property quantity (base name: "quantity")', function() {
        // TODO: update the code to test the property quantity
        expect(instance).to.have.property('quantity');
        // expect(instance.quantity).to.be(expectedValueLiteral);
      });

      it('should have the property quantityUnit (base name: "quantityUnit")', function() {
        // TODO: update the code to test the property quantityUnit
        expect(instance).to.have.property('quantityUnit');
        // expect(instance.quantityUnit).to.be(expectedValueLiteral);
      });

      it('should have the property rate (base name: "rate")', function() {
        // TODO: update the code to test the property rate
        expect(instance).to.have.property('rate');
        // expect(instance.rate).to.be(expectedValueLiteral);
      });

      it('should have the property trackingId (base name: "trackingId")', function() {
        // TODO: update the code to test the property trackingId
        expect(instance).to.have.property('trackingId');
        // expect(instance.trackingId).to.be(expectedValueLiteral);
      });

      it('should have the property shippingCost (base name: "shippingCost")', function() {
        // TODO: update the code to test the property shippingCost
        expect(instance).to.have.property('shippingCost');
        // expect(instance.shippingCost).to.be(expectedValueLiteral);
      });

    });
  });

}));
